#########################################################
# NginX Input                                           #
# Version: 1.0                                          #
# Logstash Version: 5+                                  #
# Author: negeric                                       #
# URL: https://github.com/negeric/logstash/             #
# Date: April, 11 2017                                  #
#########################################################
# @todo                                                 #
#-------------------------------------------------------#
#-------------------------------------------------------#
# Notes                                                 #
#-------------------------------------------------------#
#########################################################
input {
  beats {
    port => 5046
  }
}
filter {
	if ([message] =~ /^#/) {
		drop{}
	}
	if "nginx" in [tags] {
		mutate {
			replace => { "type" => "nginx" }
		}
    grok {
      patterns_dir => "/etc/logstash/git-repo/config/GPSi/patterns"
      match => [
        "message", '%{DATE_YMD:timestamp} \[%{WORD:Level}\] %{NUMBER:PID}\#%{NUMBER:TID}: \*%{NUMBER:CID} %{WORD:Proto} %{WORD:SRC} %{IP:ClientIP}:%{INT:ClientPort} connected to 0.0.0.0:%{INT:ServerPort}',
        "message", "%{DATE_YMD:timestamp} \[%{WORD:Level}\] %{NUMBER:PID}\#%{NUMBER:TID}: \*%{NUMBER:CID} %{WORD:Proto} %{WORD:SRC} %{WORD:Status}, bytes from/to client:%{NUMBER:BytesFromClient:int}/%{NUMBER:BytesToClient:int}, bytes from/to upstream:%{NUMBER:BytesFromUpstream:int}/%{NUMBER:BytesToUpstream:int}"
      ]
		}
    if "calamp" in [tags] {
      mutate {
        add_field => { "Website" => "CALAMP" }
      }
    }
		#Cast log_timestamp as date
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
		#remove unused fields
		mutate {
			remove_field => [ "message", "host", "input_type", "log_timestamp", "offset", "source", "tags", "[beat][name]", "[beat][hostname]", "[beat][version]" ]
		}
    if [BytesFromClient] {
      mutate {
        convert => ["BytesFromClient","integer"]
      }
    }
	}
}
